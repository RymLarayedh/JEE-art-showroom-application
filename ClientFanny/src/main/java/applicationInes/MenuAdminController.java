package applicationInes;

import java.beans.EventHandler;
import java.net.URL;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.Instant;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.Date;
import java.util.List;
import java.util.ResourceBundle;

import javax.naming.InitialContext;
import javax.naming.NamingException;

import com.jfoenix.controls.JFXButton;

import entities.Admin;
import entities.Category;
import entities.User;
import javafx.event.ActionEvent;
import javafx.event.Event;
import javafx.event.EventType;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Alert;
import javafx.scene.control.ListView;
import javafx.scene.control.TabPane;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableColumn.CellDataFeatures;
import javafx.scene.control.TableColumn.CellEditEvent;
import javafx.scene.control.TablePosition;
import javafx.scene.control.TableView;
import javafx.scene.control.TextField;
import javafx.scene.control.TreeTableView.EditEvent;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.control.cell.TextFieldTableCell;
import javafx.scene.input.KeyCode;
import javafx.scene.input.KeyEvent;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.AnchorPane;
import javafx.scene.control.Alert.AlertType;
import javafx.util.Callback;
import javafx.util.Duration;
import services.ForumManagementRemote;
import services.UserManagmentRemote;
import utils.ConfirmBox;
import javafx.animation.TranslateTransition;
import javafx.beans.Observable;
import javafx.beans.property.SimpleStringProperty;
import javafx.beans.value.ChangeListener;
import javafx.beans.value.ObservableValue;
import javafx.collections.FXCollections;
import javafx.collections.ListChangeListener;
import javafx.collections.ListChangeListener.Change;
import javafx.collections.ObservableList;;

/**
 *
 * @author InesWanen
 */
public class MenuAdminController implements Initializable {
	@FXML
	AnchorPane listCategories;
	@FXML
	private JFXButton ManageForum;
	@FXML
	private TextField addCategoryTF;
	@FXML
	private JFXButton addCategoryButton;
	@FXML
	private TableView<Category> table;
	@FXML
	private TableColumn<Category, String> name;
	@FXML
	private TableColumn addedBy;
	@FXML
	private TableColumn addedAt;
	@FXML
	private JFXButton deleteCategoryButton;
	@FXML
	private JFXButton updateCategoryButton;
	private Category selectedCategory;
	private int update;
	private String updateString;

	ObservableList<Category> data = FXCollections.observableArrayList();

	InitialContext ctx;
	public static ForumManagementRemote proxy;
	public static UserManagmentRemote userManagement;

	@Override
	public void initialize(URL location, ResourceBundle resources) {
		// TODO Auto-generated method stub
		deleteCategoryButton.setVisible(false);
		updateCategoryButton.setVisible(false);

		try {
			ctx = new InitialContext();
			proxy = (ForumManagementRemote) ctx
					.lookup("/Fanny-ear/Fanny-ejb/ForumManagement!services.ForumManagementRemote");
			userManagement = (UserManagmentRemote) ctx
					.lookup("/Fanny-ear/Fanny-ejb/UserManagment!services.UserManagmentRemote");
			Category p = new Category();

		} catch (NamingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		displayCategories();

	}

	public void displayCategories() {
		table.getItems().clear();
		List<Category> listCategories = proxy.findAllCategories();
		for (Category c : listCategories) {
			data.add(c);
		}
		System.out.println(data);
		name.setCellValueFactory(new PropertyValueFactory<Category, String>("name"));
		addedAt.setCellValueFactory(new PropertyValueFactory<Category, Date>("addedAt"));
		addedBy.setCellValueFactory(new Callback<CellDataFeatures<Category, String>, ObservableValue<String>>() {

			@Override
			public ObservableValue<String> call(CellDataFeatures<Category, String> param) {
				// TODO Auto-generated method stub
				return new SimpleStringProperty(param.getValue().getAddedBy().getUsername());
			}

		});
		table.setItems(data);
	}

	// Event Listener on JFXButton[#ManageForum].onAction
	@FXML
	public void ManageForum(ActionEvent event) {
		// TODO Autogenerated
		TranslateTransition transition = new TranslateTransition();
		transition.setDuration(Duration.seconds(2));
		transition.setNode(ManageForum);
		transition.setToY(-150);
		transition.setToX(-200);
		/* to come back for initial position */
		// transition.setAutoReverse(true);
		// transition.setCycleCount(2);
		/* end */
		transition.play();

		// event handler in input //lambda expression
		transition.setOnFinished((e) -> {
			// table.setVisible(true);
		});

	}

	/**********************
	 * refaire la condition de saisie
	 ****************************/
	@FXML
	public void addCategory(ActionEvent event) {
		// TODO Autogenerated
		Category c = new Category();
		User u = new User();
		String name = addCategoryTF.getText();
		if (name.length() == 0) {
			Alert a = new Alert(AlertType.ERROR);
			a.setContentText("!!!");
			a.show();
		} else {
			DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
			LocalDateTime now = LocalDateTime.now();
			Instant instant = now.atZone(ZoneId.systemDefault()).toInstant();
			Date date = Date.from(instant);
			c.setAddedAt(date);
			c.setName(name);
			c.setAddedBy((Admin) LoginController.userLogedIn);
			proxy.addCategory(c);
			displayCategories();
			addCategoryTF.clear();
		}

	}

	// Event Listener on TableView[#table].onMouseClicked
	@FXML
	public void selectCategory(MouseEvent event) {
		name.setEditable(true);
		selectedCategory = table.getSelectionModel().getSelectedItem();

		deleteCategoryButton.setVisible(true);
		updateCategoryButton.setVisible(true);
		table.setEditable(true);
		name.setCellFactory(TextFieldTableCell.<Category> forTableColumn());
		name.setOnEditCommit(t -> {
			t.getRowValue().setName(t.getNewValue());

			boolean confirm = ConfirmBox.display("", "Update Category ?");

			if (confirm) {

				proxy.updateCategory(selectedCategory);
			}
		});
	}

	// Event Listener on JFXButton[#deleteCategoryButton].onAction
	@FXML
	public void deleteCategory(ActionEvent event) {
		// TODO Autogenerated
		boolean confirm = ConfirmBox.display("", "Delete Category ?");
		if (confirm) {
			proxy.deleteCategory(selectedCategory);
			displayCategories();
		}

	}

	@FXML
	public void updateCategory(ActionEvent event) {

	}

}
